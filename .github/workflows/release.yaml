name: Software Release

on:
  push:
    # Pattern matched against refs/tags
    tags:
      - '*' # Push events to every tag not containing /

env:
  LIBNAPC_RELEASE_VERSION: ${{ github.ref_name }}
  LIBNAPC_DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
  LIBNAPC_DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
  GH_TOKEN: ${{ secrets.ACCESS_TOKEN_FOR_GITHUB }}
  NAPPHP_VERSION: v0.0.8
  NAPPHP_LOAD_PATH: /home/runner/napphp/src/__loadAsClass.php

jobs:

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
         sudo apt-get update
         sudo apt install gcc make
         sudo apt install valgrind
         sudo apt install fakeroot-ng

    - name: Install napphp
      run: |
         mkdir ~/napphp
         git clone --depth 1 --branch $NAPPHP_VERSION 'https://github.com/nap-software/napphp.git' ~/napphp

    - name: Setup SSH keys
      run: |
         echo "${{ secrets.GIT_SSH_KEY }}" > ~/github-deploy.key
         chmod 0600 ~/github-deploy.key
         echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/deploy.key
         chmod 0600 ~/deploy.key

    - name: Import PGP key
      run: |
         echo "${{ secrets.RELEASE_SIGNING_KEY }}" > ~/signing.key
         chmod 0600 ~/signing.key
         gpg --import ~/signing.key

    - name: Setup git
      run: |
         git config --global user.email "github-bot@nap.software"
         git config --global user.name "NAP-Software (bot)"
         git config --global core.sshCommand 'ssh -i ~/github-deploy.key'
         git config --global user.signingkey 'E5C0E37C9E962DA6'

    - name: Prepare git repositories
      run: |
         git clone git@github.com:libnapc/libnapc-arduino-releases.git ~/libnapc-arduino-releases
         cd ~/libnapc-arduino-releases && git checkout main && git rm -rf . && git clean -fxd
         git clone git@github.com:libnapc/libnapc-linux-releases.git ~/libnapc-linux-releases
         cd ~/libnapc-linux-releases && git checkout main && git rm -rf . && git clean -fxd
         git clone git@github.com:libnapc/libnapc-documentation.git ~/libnapc-documentation
         cd ~/libnapc-documentation && git checkout main && git rm -rf . && git clean -fxd

    - name: Download Release Script
      run: |
         curl https://static.nap-software.com/github/libnapc/software-release.sh -o ./__software-release.sh
         chmod +x ./__software-release.sh

    - name: Run Release Script
      run: |
         ./__software-release.sh "${{ github.ref_name }}"

  deploy_post:
    name: Post Deploy Actions
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install napphp
      run: |
         mkdir ~/napphp
         git clone --depth 1 --branch $NAPPHP_VERSION 'https://github.com/nap-software/napphp.git' ~/napphp

    - name: Setup SSH key
      run: |
         echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/deploy.key
         chmod 0600 ~/deploy.key

    - name: Check release checksums
      run: php ci/check_release_checksums.php

    - name: Add checksums verified icon
      run: php ci/add_checksums_verified_icon.php ~/deploy.key

    - name: Update default branches
      run: |
         gh api repos/libnapc/libnapc-linux-releases --method PATCH --field 'default_branch=${{ github.ref_name }}'
         gh api repos/libnapc/libnapc-arduino-releases --method PATCH --field 'default_branch=${{ github.ref_name }}'
         gh api repos/libnapc/libnapc-documentation --method PATCH --field 'default_branch=${{ github.ref_name }}'
